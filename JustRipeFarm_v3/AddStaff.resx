<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBoxBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Y6dYzf0fa5sOtYEWlZEAAAAASUVORK5CYII=
</value>
  </data>
</root>