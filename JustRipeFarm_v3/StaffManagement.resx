<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backpictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="picBocSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kwmetbX/ANSo7ka1TatnAAAAAElFTkSuQmCC
</value>
  </data>
</root>